<?xml version="1.0"?>
<launch>
  <!-- Launch Gazebo with Delhi street world -->
  <arg name="world_name" default="$(find indian_nav_scenarios)/worlds/delhi_street.world"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- Launch Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Spawn Indian delivery robot -->
  <arg name="robot_name" default="india_delivery_robot"/>
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.1"/>
  <arg name="yaw" default="0.0"/>

  <!-- Load robot description -->
  <param name="robot_description" command="$(find xacro)/xacro $(find indian_nav_scenarios)/models/india_delivery_robot/india_delivery_robot.urdf.xacro"/>

  <!-- Spawn robot in Gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model $(arg robot_name) -param robot_description -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg yaw)"/>

  <!-- Robot state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <param name="publish_frequency" type="double" value="30.0"/>
  </node>

  <!-- Joint state publisher -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" respawn="false" output="screen"/>

  <!-- Launch RViz -->
  <arg name="rviz_config" default="$(find indian_nav_scenarios)/config/delhi_navigation.rviz"/>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config)" output="screen"/>

  <!-- Map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find indian_nav_scenarios)/maps/delhi_street.yaml"/>

  <!-- AMCL localization -->
  <node name="amcl" pkg="amcl" type="amcl" output="screen">
    <rosparam file="$(find indian_nav_scenarios)/config/amcl_params.yaml" command="load"/>
    <param name="initial_pose_x" value="$(arg x)"/>
    <param name="initial_pose_y" value="$(arg y)"/>
    <param name="initial_pose_a" value="$(arg yaw)"/>
  </node>

  <!-- Move base navigation -->
  <node name="move_base" pkg="move_base" type="move_base" respawn="false" output="screen">
    <rosparam file="$(find indian_nav_scenarios)/config/costmap_common_params.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find indian_nav_scenarios)/config/costmap_common_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find indian_nav_scenarios)/config/local_costmap_params.yaml" command="load"/>
    <rosparam file="$(find indian_nav_scenarios)/config/global_costmap_params.yaml" command="load"/>
    <rosparam file="$(find indian_nav_scenarios)/config/base_local_planner_params.yaml" command="load"/>
    <rosparam file="$(find indian_nav_scenarios)/config/move_base_params.yaml" command="load"/>
  </node>

  <!-- Indian traffic simulation -->
  <node name="indian_traffic_simulator" pkg="indian_nav_scenarios" type="indian_traffic_simulator.py" output="screen">
    <param name="pedestrian_density" value="0.8"/>
    <param name="animal_probability" value="0.3"/>
    <param name="vehicle_density" value="0.6"/>
  </node>

</launch>
